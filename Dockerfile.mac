# Stage 1: Build
# Use platform-specific base images
ARG BASE_IMAGE
FROM ${BASE_IMAGE} as builder
# Specify the JAR file location dynamically

ARG MODULE_NAME
ARG JAR_FILE=${MODULE_NAME}/target/*.jar
# Copy the application JAR file into the build image
COPY ${JAR_FILE} application.jar
# Use Spring Boot's layertools to extract layers for optimized builds
RUN java -Djarmode=layertools -jar application.jar extract

# Stage 2: Runtime
FROM ${BASE_IMAGE}
# Install essential tools for health checks
RUN apk --no-cache add curl

# Add a Jenkins user for enhanced security using Alpine's command syntax
RUN addgroup -S jenkins && adduser -S -G jenkins jenkins -h /home/jenkins
USER jenkins

# Expose application and debug ports
EXPOSE ${APP_PORT} ${DEBUG_PORT}

# Copy the extracted layers from the builder stage
COPY --from=builder dependencies/ ./
COPY --from=builder snapshot-dependencies/ ./
COPY --from=builder spring-boot-loader/ ./
COPY --from=builder application/ ./

# Copy environment files into the container at the working directory
COPY env.mac ./

# Define the entry point to run the Spring Boot application
ENTRYPOINT ["java", "org.springframework.boot.loader.launch.JarLauncher"]
