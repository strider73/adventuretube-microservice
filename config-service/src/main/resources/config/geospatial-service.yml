server:
  port: ${GEOSPATIAL_SERVICE_PORT}

spring:
  data:
    mongodb:
      authentication-database: admin
      username: strider
      password: 5785Ch00
      database: ${MONGO_DB}
      port: ${MONGO_PORT}
      host: ${MONGO_HOST}
      auto-index-creation: true
    rest:
      base-path: /api/rest
  datasource:
    url: jdbc:postgresql:${POSTGRES_HOST}}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      maximum-pool-size: 10         # Maximum number of connections in the pool
      minimum-idle: 5               # Minimum number of idle connections
      max-lifetime: 2700000         # Max lifetime of a connection in milliseconds (27 minutes)
      idle-timeout: 600000          # Time that a connection can sit idle in milliseconds (10 minutes)
      validation-timeout: 5000      # Timeout for connection validation in milliseconds (5 seconds)
      connection-test-query: SELECT 1  # Query to validate connections
  jpa:
    hibernate:
      ddl-auto: update
      show-sql: true
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
          default_schema: public  # <-- Add this line
          format_sql: true
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      group-id: ${KAFKA_GROUP_ID}
      auto-offset-reset: ${KAFKA_AUTO_OFFSET_RESET}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: kafka:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL}
    fetch-registry: true
    register-with-eureka: true
    enabled: true



logging:
  level:
    root: INFO
jwt:
  secret: ${JWT_SECRET}


